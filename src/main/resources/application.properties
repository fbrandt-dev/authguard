spring.application.name=authguard
spring.profiles.active=local


spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/authguard
spring.datasource.username=authguard
spring.datasource.password=authguard-password
spring.datasource.name=authguard
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.jackson.serialization.write-enums-using-to-string=true
spring.jackson.deserialization.read-enums-using-to-string=true

server.error.include-stacktrace:never

logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %X{trace-identifier} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}